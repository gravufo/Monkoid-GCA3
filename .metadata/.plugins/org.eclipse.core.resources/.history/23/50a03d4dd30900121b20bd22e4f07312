package com.monkoid.retroaction;

import java.util.ArrayList;

import com.monkoid.retroaction.R;
import com.monkoid.retroaction.R.drawable;

import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.Window;

public class View extends SurfaceView implements SurfaceHolder.Callback{


	private MainThread mainThread_;
	
	private float m_ScaleWidth = 480;			// Facteur de grossissement selon la taille de l'écran
	private float m_ScaleHeight = 640;		// Facteur de grossissement selon la taille de l'écran
	
	public View(Context context,Activity _act, Resources _res) {
		super(context);
		// TODO Auto-generated constructor stub
		// adding the callback (this) to the surface holder to intercept events
	      getHolder().addCallback(this);
		 // make the GamePanel focusable so it can handle events
	      setFocusable(true);
	      Log.d("view", "Constructor");
	      mainThread_ = new MainThread(this.getHolder(), this);
	}
	
	@Override
	protected void onDraw(Canvas canvas) {
		Log.d("View", "onDraw");
		if(canvas != null)
		{
			Bitmap kangoo = BitmapFactory.decodeResource(getResources(),
                    R.drawable.kangoo);
			Bitmap newGameBtn = BitmapFactory.decodeResource(getResources(), R.drawable.new_game_btn_img);
			canvas.drawColor(Color.BLACK);
			
			canvas.drawBitmap(kangoo, 10, 10, null);
			canvas.drawBitmap(newGameBtn, 50, 50, null)
		}
			
	}
	protected void update(){
		
	}

	public boolean onTouchEvent(MotionEvent event) {
		return true;
	}

	public void surfaceChanged(SurfaceHolder holder, int format, int width,
			int height) {
		// TODO Auto-generated method stub
		
	}

	public void surfaceCreated(SurfaceHolder holder) {
		// TODO Auto-generated method stub
		this.mainThread_.start();
	}

	public void surfaceDestroyed(SurfaceHolder holder) {
		// TODO Auto-generated method stub
		
	}
	
}
